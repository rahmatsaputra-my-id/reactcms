{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/src/data/reactcms/src/Screens/WarehouseDetailScreen/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import { DataGrid } from '@mui/x-data-grid';\n\nimport { getDataById } from '../../Helper/Action';\nimport { SET_SELECTED_WAREHOUSE_ID } from '../../Helper/Constants';\nimport { DefaultTemplates, Text } from '../../Components/Lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WarehouseDetailSreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handlerGetDataById = async () => {\n      try {\n        const {\n          selectedWarehouseId\n        } = this.props;\n        const result = await getDataById(selectedWarehouseId);\n\n        if (!result.isError) {\n          if (result !== null && result !== void 0 && result.data) {\n            this._handlerColumnData(result === null || result === void 0 ? void 0 : result.data);\n\n            this._handlerRowsData(result === null || result === void 0 ? void 0 : result.data);\n          }\n        } else {\n          console.log('CTable/index.js@_handlerGetDataById', result);\n        }\n      } catch (error) {\n        console.log('CTable/index.js@_handlerGetDataById', error);\n      }\n    };\n\n    this._handlerColumnData = listDataById => {\n      if (listDataById) {\n        let data = [];\n        const columns = Object.keys(listDataById);\n        columns.sort();\n        columns.reverse();\n\n        for (let i = 0; i < columns.length; i++) {\n          const element = columns[i];\n          const datum = {\n            'field': `col${i}`,\n            'headerName': element,\n            'width': 200\n          };\n          data.push(datum);\n        }\n\n        this.setState({\n          columns: data\n        });\n      }\n    };\n\n    this._handlerRowsData = listDataById => {\n      if (listDataById) {\n        let data = [];\n\n        for (let i = 0; i < 1; i++) {\n          const element = listDataById;\n          const dateLastSync = new Date(element === null || element === void 0 ? void 0 : element.LastSync);\n          const dateLastModified = new Date(element === null || element === void 0 ? void 0 : element.LastModifiedDateTime);\n          const lastSyncDate = dateLastSync.toLocaleString();\n          const lastModifiedDate = dateLastModified.toLocaleString();\n          const datum = {\n            'id': i,\n            'col0': element === null || element === void 0 ? void 0 : element.WarehouseID,\n            'col1': element === null || element === void 0 ? void 0 : element.ReplenishmentClass,\n            'col2': lastSyncDate,\n            'col3': lastModifiedDate,\n            'col4': element === null || element === void 0 ? void 0 : element.Description,\n            'col5': element === null || element === void 0 ? void 0 : element.Branch,\n            'col6': element === null || element === void 0 ? void 0 : element.Active\n          };\n          data.push(datum);\n        }\n\n        this.setState({\n          rows: data\n        });\n      }\n    };\n\n    this._renderView = () => {\n      const {\n        rows,\n        columns\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.containerTable,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.title,\n          children: 'Warehouse Detail'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this);\n    };\n\n    this.state = {\n      columns: [],\n      rows: []\n    };\n  }\n\n  componentDidMount() {\n    this._handlerGetDataById();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DefaultTemplates, {\n      children: this._renderView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    selectedWarehouseId\n  } = state;\n  return {\n    selectedWarehouseId\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedWarehouseId: data => dispatch({\n    type: SET_SELECTED_WAREHOUSE_ID,\n    selectedWarehouseId: data\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseDetailSreen);\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  content: {\n    padding: 48,\n    flex: 1\n  },\n  containerTable: {\n    height: 700\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 32,\n    marginBottom: 32\n  }\n};","map":{"version":3,"names":["React","Component","connect","getDataById","SET_SELECTED_WAREHOUSE_ID","DefaultTemplates","Text","WarehouseDetailSreen","constructor","props","_handlerGetDataById","selectedWarehouseId","result","isError","data","_handlerColumnData","_handlerRowsData","console","log","error","listDataById","columns","Object","keys","sort","reverse","i","length","element","datum","push","setState","dateLastSync","Date","LastSync","dateLastModified","LastModifiedDateTime","lastSyncDate","toLocaleString","lastModifiedDate","WarehouseID","ReplenishmentClass","Description","Branch","Active","rows","_renderView","state","styles","containerTable","title","componentDidMount","render","mapStateToProps","mapDispatchToProps","dispatch","setSelectedWarehouseId","type","container","display","flexDirection","content","padding","flex","height","fontWeight","fontSize","marginBottom"],"sources":["/Users/matteo/src/data/reactcms/src/Screens/WarehouseDetailScreen/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { DataGrid } from '@mui/x-data-grid';\nimport { getDataById } from '../../Helper/Action';\nimport { SET_SELECTED_WAREHOUSE_ID } from '../../Helper/Constants';\nimport { DefaultTemplates, Text } from '../../Components/Lib';\n\nclass WarehouseDetailSreen extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         columns: [],\n         rows: []\n      }\n   }\n\n   componentDidMount() {\n      this._handlerGetDataById();\n   }\n\n   _handlerGetDataById = async () => {\n      try {\n         const { selectedWarehouseId } = this.props\n         const result = await getDataById(selectedWarehouseId);\n\n         if (!result.isError) {\n            if (result?.data) {\n               this._handlerColumnData(result?.data);\n               this._handlerRowsData(result?.data);\n            }\n         } else {\n            console.log('CTable/index.js@_handlerGetDataById', result);\n         }\n      } catch (error) {\n         console.log('CTable/index.js@_handlerGetDataById', error);\n      }\n   }\n\n   _handlerColumnData = (listDataById) => {\n      if (listDataById) {\n         let data = [];\n         const columns = Object.keys(listDataById);\n         columns.sort();\n         columns.reverse();\n\n         for (let i = 0; i < columns.length; i++) {\n            const element = columns[i];\n            const datum = {\n               'field': `col${i}`,\n               'headerName': element,\n               'width': 200,\n            };\n\n            data.push(datum);\n         }\n\n         this.setState({ columns: data })\n      }\n   }\n\n   _handlerRowsData = (listDataById) => {\n      if (listDataById) {\n         let data = [];\n\n         for (let i = 0; i < 1; i++) {\n            const element = listDataById;\n            const dateLastSync = new Date(element?.LastSync)\n            const dateLastModified = new Date(element?.LastModifiedDateTime)\n            const lastSyncDate = dateLastSync.toLocaleString();\n            const lastModifiedDate = dateLastModified.toLocaleString();\n\n            const datum = {\n               'id': i,\n               'col0': element?.WarehouseID,\n               'col1': element?.ReplenishmentClass,\n               'col2': lastSyncDate,\n               'col3': lastModifiedDate,\n               'col4': element?.Description,\n               'col5': element?.Branch,\n               'col6': element?.Active,\n            };\n\n            data.push(datum);\n         }\n\n         this.setState({ rows: data });\n      }\n   }\n\n   _renderView = () => {\n\n      const { rows, columns } = this.state;\n      return (\n         <div style={styles.containerTable}>\n            <Text\n               style={styles.title}\n               children={'Warehouse Detail'}\n            />\n\n            {/* <DataGrid\n               columns={columns}\n               rows={rows}\n            /> */}\n         </div>\n      );\n   }\n\n   render() {\n      return (\n         <DefaultTemplates\n            children={this._renderView()}\n         />\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   const { selectedWarehouseId } = state;\n   return {\n      selectedWarehouseId\n   };\n};\n\nconst mapDispatchToProps = dispatch => ({\n   setSelectedWarehouseId: (data) =>\n      dispatch({\n         type: SET_SELECTED_WAREHOUSE_ID,\n         selectedWarehouseId: data\n      })\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(WarehouseDetailSreen);\n\nconst styles = {\n   container: {\n      display: 'flex',\n      flexDirection: 'row'\n   },\n   content: {\n      padding: 48,\n      flex: 1\n   },\n   containerTable: {\n      height: 700\n   },\n   title: {\n      fontWeight: 'bold',\n      fontSize: 32,\n      marginBottom: 32\n   }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}