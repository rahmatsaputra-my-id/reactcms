{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/src/data/reactcms/src/Screens/WarehouseScreen/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SideMenu } from '../../Components/Lib'; // import { DataGrid } from '@mui/x-data-grid';\n\nimport { getAllData } from '../../Helper/Action'; // import { Breadcrumbs, Link } from '@mui/material';\n\nimport { SET_SELECTED_WAREHOUSE_ID } from '../../Helper/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WarehouseScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this._hanlderGetAllData = async () => {\n      try {\n        const result = await getAllData();\n\n        if (!result.isError) {\n          if (result !== null && result !== void 0 && result.data) {\n            this.setState({\n              listAllData: result === null || result === void 0 ? void 0 : result.data\n            });\n\n            this._handlerColumnData(result === null || result === void 0 ? void 0 : result.data);\n\n            this._handlerRowsData(result === null || result === void 0 ? void 0 : result.data);\n          }\n        } else {\n          console.log('CTable/index.js@_hanlderGetAllData', result);\n        }\n      } catch (error) {\n        console.log('CTable/index.js@_hanlderGetAllData', error);\n      }\n    };\n\n    this._handlerColumnData = listAllData => {\n      if (listAllData) {\n        let data = [];\n        const firstData = listAllData === null || listAllData === void 0 ? void 0 : listAllData[0];\n        const columns = Object.keys(firstData);\n        columns.sort();\n        columns.reverse();\n\n        for (let i = 0; i < columns.length; i++) {\n          const element = columns[i];\n          const datum = {\n            'field': `col${i}`,\n            'headerName': element,\n            'width': 200\n          };\n          data.push(datum);\n        }\n\n        this.setState({\n          columns: data\n        });\n      }\n    };\n\n    this._handlerRowsData = listAllData => {\n      if (listAllData) {\n        let data = [];\n\n        for (let i = 0; i < listAllData.length; i++) {\n          const element = listAllData[i];\n          const dateLastSync = new Date(element.LastSync);\n          const dateLastModified = new Date(element.LastModifiedDateTime);\n          const lastSyncDate = dateLastSync.toLocaleString();\n          const lastModifiedDate = dateLastModified.toLocaleString();\n          const datum = {\n            'id': i,\n            'col0': element.WarehouseID,\n            'col1': lastSyncDate,\n            'col2': lastModifiedDate,\n            'col3': element.Description,\n            'col4': element.Branch,\n            'col5': element.Active\n          };\n          data.push(datum);\n        }\n\n        this.setState({\n          rows: data\n        });\n      }\n    };\n\n    this._renderView = () => {\n      const {\n        rows,\n        columns\n      } = this.state;\n      const {\n        setSelectedWarehouseId\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.content,\n          children: [this._renderHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.containerTable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 10\n      }, this);\n    };\n\n    this.state = {\n      listAllData: false,\n      listDataById: false,\n      columns: [],\n      rows: [],\n      warehouseIdSelected: false\n    };\n  }\n\n  componentDidMount() {\n    this._hanlderGetAllData();\n  }\n\n  render() {\n    return this._renderView();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    selectedWarehouseId\n  } = state;\n  return {\n    selectedWarehouseId\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedWarehouseId: data => dispatch({\n    type: SET_SELECTED_WAREHOUSE_ID,\n    selectedWarehouseId: data\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseScreen);\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  content: {\n    padding: 48,\n    flex: 1\n  },\n  containerTable: {\n    height: 600\n  },\n  title: {\n    textAlign: 'left',\n    marginBottom: 32\n  }\n};","map":{"version":3,"names":["React","Component","connect","SideMenu","getAllData","SET_SELECTED_WAREHOUSE_ID","WarehouseScreen","constructor","props","_hanlderGetAllData","result","isError","data","setState","listAllData","_handlerColumnData","_handlerRowsData","console","log","error","firstData","columns","Object","keys","sort","reverse","i","length","element","datum","push","dateLastSync","Date","LastSync","dateLastModified","LastModifiedDateTime","lastSyncDate","toLocaleString","lastModifiedDate","WarehouseID","Description","Branch","Active","rows","_renderView","state","setSelectedWarehouseId","styles","container","content","_renderHeader","containerTable","listDataById","warehouseIdSelected","componentDidMount","render","mapStateToProps","selectedWarehouseId","mapDispatchToProps","dispatch","type","display","flexDirection","padding","flex","height","title","textAlign","marginBottom"],"sources":["/Users/matteo/src/data/reactcms/src/Screens/WarehouseScreen/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SideMenu } from '../../Components/Lib';\n// import { DataGrid } from '@mui/x-data-grid';\nimport { getAllData } from '../../Helper/Action';\n// import { Breadcrumbs, Link } from '@mui/material';\nimport { SET_SELECTED_WAREHOUSE_ID } from '../../Helper/Constants';\n\nclass WarehouseScreen extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         listAllData: false,\n         listDataById: false,\n         columns: [],\n         rows: [],\n         warehouseIdSelected: false\n      }\n   }\n\n   componentDidMount() {\n      this._hanlderGetAllData();\n   }\n\n\n   _hanlderGetAllData = async () => {\n      try {\n         const result = await getAllData();\n\n         if (!result.isError) {\n            if (result?.data) {\n               this.setState({ listAllData: result?.data });\n               this._handlerColumnData(result?.data);\n               this._handlerRowsData(result?.data);\n            }\n         } else {\n            console.log('CTable/index.js@_hanlderGetAllData', result);\n         }\n      } catch (error) {\n         console.log('CTable/index.js@_hanlderGetAllData', error);\n      }\n   }\n\n   _handlerColumnData = (listAllData) => {\n      if (listAllData) {\n         let data = [];\n         const firstData = listAllData?.[0];\n         const columns = Object.keys(firstData);\n         columns.sort();\n         columns.reverse();\n\n         for (let i = 0; i < columns.length; i++) {\n            const element = columns[i];\n            const datum = {\n               'field': `col${i}`,\n               'headerName': element,\n               'width': 200,\n            };\n\n            data.push(datum);\n         }\n         this.setState({ columns: data })\n      }\n   }\n\n   _handlerRowsData = (listAllData) => {\n      if (listAllData) {\n         let data = [];\n\n         for (let i = 0; i < listAllData.length; i++) {\n            const element = listAllData[i];\n            const dateLastSync = new Date(element.LastSync)\n            const dateLastModified = new Date(element.LastModifiedDateTime)\n            const lastSyncDate = dateLastSync.toLocaleString();\n            const lastModifiedDate = dateLastModified.toLocaleString();\n\n            const datum = {\n               'id': i,\n               'col0': element.WarehouseID,\n               'col1': lastSyncDate,\n               'col2': lastModifiedDate,\n               'col3': element.Description,\n               'col4': element.Branch,\n               'col5': element.Active,\n            };\n\n            data.push(datum);\n         }\n         this.setState({ rows: data });\n      }\n   }\n\n   // _renderHeader = () => {\n   //    const title = 'Warehouse';\n\n   //    return (\n   //       <div>\n   //          <Breadcrumbs aria-label='breadcrumb'>\n   //             <Link underline='always' color={'#0000FF'} href='/warehouse'>\n   //                {title}\n   //             </Link>\n   //          </Breadcrumbs>\n\n   //          <h1 style={styles.title}>{title}</h1>\n   //       </div>\n   //    );\n   // }\n\n   _renderView = () => {\n      const { rows, columns } = this.state;\n      const { setSelectedWarehouseId } = this.props;\n\n      return (\n         <div style={styles.container}>\n            <SideMenu />\n\n            <div style={styles.content}>\n               {this._renderHeader()}\n\n               <div style={styles.containerTable}>\n                  {/* <DataGrid\n                     columns={columns}\n                     rows={rows}\n                     onRowClick={(params, event) => {\n                        if (!event.ignore && params) {\n                           setSelectedWarehouseId(params.row.col0);\n                           window.location.replace('/warehouse/detail-location-warehouse-retail');\n                        }\n                     }}\n                  /> */}\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   render() {\n      return (this._renderView());\n   }\n}\n\nconst mapStateToProps = state => {\n   const { selectedWarehouseId } = state;\n   return {\n      selectedWarehouseId\n   };\n};\n\nconst mapDispatchToProps = dispatch => ({\n   setSelectedWarehouseId: (data) =>\n      dispatch({\n         type: SET_SELECTED_WAREHOUSE_ID,\n         selectedWarehouseId: data\n      })\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(WarehouseScreen);\n\n\nconst styles = {\n   container: {\n      display: 'flex',\n      flexDirection: 'row'\n   },\n   content: {\n      padding: 48,\n      flex: 1\n   },\n   containerTable: {\n      height: 600\n   },\n   title: {\n      textAlign: 'left',\n      marginBottom: 32\n   }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}