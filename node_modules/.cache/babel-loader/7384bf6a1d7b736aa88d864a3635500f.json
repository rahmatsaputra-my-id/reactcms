{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/src/data/reactcms/src/Screens/TransferKuotaScreen/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllData } from '../../Helper/Action';\nimport { SET_SELECTED_WAREHOUSE_ID } from '../../Helper/Constants';\nimport { Text, View, DefaultTemplates } from '../../Components/Lib';\nimport AddTransfer from './Components/AddTransfer';\nimport ListTransfer from './Components/ListTransfer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllocatedQuotaScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handlerGetAllData = async () => {\n      try {\n        const result = await getAllData();\n\n        if (!result.isError) {\n          if (result !== null && result !== void 0 && result.data) {\n            this.setState({\n              listAllData: result === null || result === void 0 ? void 0 : result.data\n            });\n\n            this._handlerColumnData(result === null || result === void 0 ? void 0 : result.data);\n\n            this._handlerRowsData(result === null || result === void 0 ? void 0 : result.data);\n          }\n        } else {\n          console.log('CTable/index.js@_handlerGetAllData', result);\n        }\n      } catch (error) {\n        console.log('CTable/index.js@_handlerGetAllData', error);\n      }\n    };\n\n    this._handlerColumnData = listAllData => {\n      if (listAllData) {\n        let data = [];\n        const firstData = listAllData === null || listAllData === void 0 ? void 0 : listAllData[0];\n        const columns = Object.keys(firstData);\n        columns.sort();\n        columns.reverse();\n\n        for (let i = 0; i < columns.length; i++) {\n          const element = columns[i];\n          const datum = {\n            'field': `col${i}`,\n            'headerName': element,\n            'width': 170\n          };\n          data.push(datum);\n        }\n\n        this.setState({\n          columnsSummaryTable: data\n        });\n      }\n    };\n\n    this._handlerRowsData = listAllData => {\n      if (listAllData) {\n        let data = [];\n\n        for (let i = 0; i < listAllData.length; i++) {\n          const element = listAllData[i];\n          const dateLastSync = new Date(element === null || element === void 0 ? void 0 : element.LastSync);\n          const dateLastModified = new Date(element === null || element === void 0 ? void 0 : element.LastModifiedDateTime);\n          const lastSyncDate = dateLastSync === null || dateLastSync === void 0 ? void 0 : dateLastSync.toLocaleString();\n          const lastModifiedDate = dateLastModified === null || dateLastModified === void 0 ? void 0 : dateLastModified.toLocaleString();\n          const datum = {\n            'id': i,\n            'col0': element === null || element === void 0 ? void 0 : element.WarehouseID,\n            'col1': lastSyncDate,\n            'col2': lastModifiedDate,\n            'col3': element === null || element === void 0 ? void 0 : element.Description,\n            'col4': element === null || element === void 0 ? void 0 : element.Branch,\n            'col5': element === null || element === void 0 ? void 0 : element.Active\n          };\n          data.push(datum);\n        }\n\n        this.setState({\n          rowsSummaryTable: data\n        });\n      }\n    };\n\n    this._renderListTransfer = () => {\n      const {\n        rowsSummaryTable,\n        columnsSummaryTable\n      } = this.state;\n      const {\n        setSelectedWarehouseId\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(ListTransfer, {\n        rows: rowsSummaryTable,\n        columns: columnsSummaryTable,\n        onRowClick: (params, event) => {\n          if (!(event !== null && event !== void 0 && event.ignore) && params) {\n            var _params$row;\n\n            setSelectedWarehouseId(params === null || params === void 0 ? void 0 : (_params$row = params.row) === null || _params$row === void 0 ? void 0 : _params$row.col0);\n            window.location.replace('/home/erp/warehouse/detail-location-warehouse-retail');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }, this);\n    };\n\n    this._renderAddTransfer = () => {\n      const {\n        rowsSummaryTable,\n        columnsSummaryTable\n      } = this.state;\n      const {\n        setSelectedWarehouseId\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(AddTransfer, {\n        rows: rowsSummaryTable,\n        columns: columnsSummaryTable,\n        onRowClick: (params, event) => {\n          if (!(event !== null && event !== void 0 && event.ignore) && params) {\n            var _params$row2;\n\n            setSelectedWarehouseId(params === null || params === void 0 ? void 0 : (_params$row2 = params.row) === null || _params$row2 === void 0 ? void 0 : _params$row2.col0);\n            window.location.replace('/home/erp/warehouse/detail-location-warehouse-retail');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }, this);\n    };\n\n    this._renderView = () => {\n      const {\n        isInputDataTransfer\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.title,\n          children: 'Transfer Kuota'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), isInputDataTransfer ? this._renderAddTransfer() : this._renderListTransfer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 10\n      }, this);\n    };\n\n    this.state = {\n      listAllData: false,\n      listDataById: false,\n      columnsSummaryTable: [],\n      rowsSummaryTable: [],\n      isInputDataTransfer: false,\n      warehouseIdSelected: false\n    };\n  }\n\n  componentDidMount() {\n    this._handlerGetAllData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DefaultTemplates, {\n      children: this._renderView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    selectedWarehouseId\n  } = state;\n  return {\n    selectedWarehouseId\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedWarehouseId: data => dispatch({\n    type: SET_SELECTED_WAREHOUSE_ID,\n    selectedWarehouseId: data\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllocatedQuotaScreen);\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  content: {\n    paddingLeft: 48,\n    paddingRight: 48,\n    paddingTop: 24,\n    paddingBottom: 48,\n    flex: 1\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 32,\n    marginBottom: 32\n  }\n};","map":{"version":3,"names":["React","Component","connect","getAllData","SET_SELECTED_WAREHOUSE_ID","Text","View","DefaultTemplates","AddTransfer","ListTransfer","AllocatedQuotaScreen","constructor","props","_handlerGetAllData","result","isError","data","setState","listAllData","_handlerColumnData","_handlerRowsData","console","log","error","firstData","columns","Object","keys","sort","reverse","i","length","element","datum","push","columnsSummaryTable","dateLastSync","Date","LastSync","dateLastModified","LastModifiedDateTime","lastSyncDate","toLocaleString","lastModifiedDate","WarehouseID","Description","Branch","Active","rowsSummaryTable","_renderListTransfer","state","setSelectedWarehouseId","params","event","ignore","row","col0","window","location","replace","_renderAddTransfer","_renderView","isInputDataTransfer","styles","title","listDataById","warehouseIdSelected","componentDidMount","render","mapStateToProps","selectedWarehouseId","mapDispatchToProps","dispatch","type","container","display","flexDirection","content","paddingLeft","paddingRight","paddingTop","paddingBottom","flex","fontWeight","fontSize","marginBottom"],"sources":["/Users/matteo/src/data/reactcms/src/Screens/TransferKuotaScreen/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllData } from '../../Helper/Action';\nimport { SET_SELECTED_WAREHOUSE_ID } from '../../Helper/Constants';\nimport { Text, View, DefaultTemplates } from '../../Components/Lib';\nimport AddTransfer from './Components/AddTransfer';\nimport ListTransfer from './Components/ListTransfer';\n\nclass AllocatedQuotaScreen extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         listAllData: false,\n         listDataById: false,\n         columnsSummaryTable: [],\n         rowsSummaryTable: [],\n         isInputDataTransfer: false,\n         warehouseIdSelected: false\n      }\n   }\n\n   componentDidMount() {\n      this._handlerGetAllData();\n   }\n\n   _handlerGetAllData = async () => {\n      try {\n         const result = await getAllData();\n\n         if (!result.isError) {\n            if (result?.data) {\n               this.setState({ listAllData: result?.data });\n               this._handlerColumnData(result?.data);\n               this._handlerRowsData(result?.data);\n            }\n         } else {\n            console.log('CTable/index.js@_handlerGetAllData', result);\n         }\n      } catch (error) {\n         console.log('CTable/index.js@_handlerGetAllData', error);\n      }\n   }\n\n   _handlerColumnData = (listAllData) => {\n      if (listAllData) {\n         let data = [];\n         const firstData = listAllData?.[0];\n         const columns = Object.keys(firstData);\n         columns.sort();\n         columns.reverse();\n\n         for (let i = 0; i < columns.length; i++) {\n            const element = columns[i];\n            const datum = {\n               'field': `col${i}`,\n               'headerName': element,\n               'width': 170,\n            };\n\n            data.push(datum);\n         }\n         this.setState({ columnsSummaryTable: data })\n      }\n   }\n\n   _handlerRowsData = (listAllData) => {\n      if (listAllData) {\n         let data = [];\n\n         for (let i = 0; i < listAllData.length; i++) {\n            const element = listAllData[i];\n            const dateLastSync = new Date(element?.LastSync)\n            const dateLastModified = new Date(element?.LastModifiedDateTime)\n            const lastSyncDate = dateLastSync?.toLocaleString();\n            const lastModifiedDate = dateLastModified?.toLocaleString();\n\n            const datum = {\n               'id': i,\n               'col0': element?.WarehouseID,\n               'col1': lastSyncDate,\n               'col2': lastModifiedDate,\n               'col3': element?.Description,\n               'col4': element?.Branch,\n               'col5': element?.Active,\n            };\n\n            data.push(datum);\n         }\n         this.setState({ rowsSummaryTable: data });\n      }\n   }\n\n   _renderListTransfer = () => {\n      const { rowsSummaryTable, columnsSummaryTable } = this.state;\n      const { setSelectedWarehouseId } = this.props;\n\n      return (\n         <ListTransfer\n            rows={rowsSummaryTable}\n            columns={columnsSummaryTable}\n            onRowClick={(params, event) => {\n               if (!event?.ignore && params) {\n                  setSelectedWarehouseId(params?.row?.col0);\n                  window.location.replace('/home/erp/warehouse/detail-location-warehouse-retail');\n               }\n            }}\n         />\n      );\n   }\n\n   _renderAddTransfer = () => {\n      const { rowsSummaryTable, columnsSummaryTable } = this.state;\n      const { setSelectedWarehouseId } = this.props;\n\n      return (\n         <AddTransfer\n            rows={rowsSummaryTable}\n            columns={columnsSummaryTable}\n            onRowClick={(params, event) => {\n               if (!event?.ignore && params) {\n                  setSelectedWarehouseId(params?.row?.col0);\n                  window.location.replace('/home/erp/warehouse/detail-location-warehouse-retail');\n               }\n            }}\n         />\n      );\n   }\n\n   _renderView = () => {\n      const { isInputDataTransfer } = this.state;\n\n      return (\n         <View>\n            <Text\n               style={styles.title}\n               children={'Transfer Kuota'}\n            />\n\n            {\n               isInputDataTransfer\n                  ? this._renderAddTransfer()\n                  : this._renderListTransfer()\n            }\n         </View>\n      );\n   }\n\n   render() {\n      return (\n         <DefaultTemplates\n            children={this._renderView()}\n         />\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   const { selectedWarehouseId } = state;\n   return {\n      selectedWarehouseId\n   };\n};\n\nconst mapDispatchToProps = dispatch => ({\n   setSelectedWarehouseId: (data) =>\n      dispatch({\n         type: SET_SELECTED_WAREHOUSE_ID,\n         selectedWarehouseId: data\n      })\n});\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(AllocatedQuotaScreen);\n\n\nconst styles = {\n   container: {\n      display: 'flex',\n      flexDirection: 'row'\n   },\n   content: {\n      paddingLeft: 48,\n      paddingRight: 48,\n      paddingTop: 24,\n      paddingBottom: 48,\n      flex: 1\n   },\n   title: {\n      fontWeight: 'bold',\n      fontSize: 32,\n      marginBottom: 32\n   }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}